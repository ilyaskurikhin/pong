import os
env = Environment()

if env['PLATFORM'] == 'darwin':
    env['CXX'] = 'clang++'
    env['CCFLAGS'] = '-stdlib=libc++ '
    env['LINKFLAGS'] = '-stdlib=libc++ '  
elif env['PLATFORM'] == 'posix':
    env['CXX'] = 'g++'
    env.Append(LIBPATH='/usr/local/softs/SFML/lib')


env.Append(CCFLAGS='-std=c++11 -g3 -Wall -Wextra -I/usr/local/include/ -I/usr/local/softs/SFML/include/ ')
env.Append(LIBS=['sfml-system', 'sfml-window', 'sfml-graphics'])
env.Decider('content')

src_files = [Glob("Paddle/*.cpp"), Glob("Ball/*.cpp"), Glob("Score/*.cpp")] 
objects=env.Object(source=src_files)

def DefineProgram(name, main):
    target = env.Program(name, source = objects + main, CPPPATH = '.')
    env.Alias(name, target)
    run = env.Command(name+".out",[],"./build/"+name, ENV = os.environ)
    env.Alias(name+"-run", run)
    env.Depends(run, target)
    env.AlwaysBuild(run)
    env.Default(target)

DefineProgram('pong', ['main.cpp'])

